
NOTE the actual assignment files are in the dedicated repo

I want to use git better so every change should be on a branch

Once the project is defined tasks should be created for every step and a branch created for each one.



User Stories

🐿️ As a user, I want the app to be fast and responsive so that I can browse without delays.
    This will work with simple text based application
    
🐿️ As a user, I want to read and add posts so that I can interact with the community.
    There is no authentication for this app, so it will work fine will multiple users
    I will add an author field

🐿️ As a user, I want a simple and intuitive form for creating new posts so that the process feels effortless.
    a dedicated page for creating a new todo
    
🐿️ As a user, I want to view multiple pages so that I can easily find the content I’m looking for.
    ambiguous expectation, I am reading this as a page to enter new, or edit existing posts.  

🐿️ As a developer, I want to build a database schema and seed the database with realistic data for accurate testing and development.
    a set of todo posts will not be hard to create

🐿️ As a user, I want to be able to view all of the posts within the database so that I can explore all available content.
    This will be a normal view of outstanding tasks

🐿️ As a developer, I want to use .map() to display all posts to efficiently display fetched data.
    How else would you do this? 

🐿️ As a developer, I want to poll my database to render any new data stored in there efficiently.
    as a team app this in an important feature


Requirements
🎯 Create a client using React.
🎯 Use Express to create your server, using both GET and POST endpoints.
🎯 Build a React form for users to create posts.
🎯 Create multiple pages using React Router.
🎯 Design a database schema, and seed the database with some realistic data.
🎯 Use SQL to retrieve posts from the database in your Express server.
🎯 Display all posts using .map().
🎯 Use an interval and useEffect() to poll your database.

Stretch User Stories
🐿️ As a user, I want to access different posts through dynamic pages so that navigation feels smooth.
🐿️ As a user, I want to explore posts by category using dedicated routes so that I can easily find content that interests me.
🐿️ As a user, I want to be able to delete my posts so that I can manage my content and remove anything I no longer want to share.
🐿️ As a user, I want to like posts, increasing their like count, so that I can express my appreciation for content I enjoy.
🐿️ As a user, I want to filter posts based on different criteria so that I can quickly find the most relevant content for me.

Stretch Requirements
🏹 Create dynamic pages using react-router-dom.
🏹 Use react-router-dom to create a dedicated route for the categories
For example, /posts/:categoryName.
🏹 Allow users to delete posts.
🏹 Add ‘like’ functionality on posts.
🏹 Create additional SQL queries to show filtered posts.

My plan:

A multi user task application

 I can use the relational database workshop as the basis except posts will be tasks
 category is the task list name
 
 example 
    Task lists: (ie category)
        Coding
        Styling
        
    Tasks
        create route to add tag         task_list coding tag urgent coders
        create route to delete tag      task_list coding tag stretch coders
        green background                task_list Styling tag artists
        button design                   task_list Styling tag artists
        

The user is able to enter tasks that need to be completed
    Tasks have category, title, details, priority and tags
    single table for all tasks
     
The user is able to add tags and delete tags 
    Tags exist in dedicated table
    
Tasks can have one or more tags linked to ore removed from them

default tags 
    On Hold
    In Progress    
    Completed
    
todo: (the irony!) 

    create vite client
    create express server (including dotenv pg cors)
    
    
    to be continued ...
    




